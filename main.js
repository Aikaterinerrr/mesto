(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n){var r,o,i=this,a=e.data,u=e.handleCardClick,c=e.handleDelClick,l=e.ownerId,s=e.addLike,f=e.removeLike;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),o=function(){i._cardLikeBtn.classList.contains("card__like-btn_active")?i._removeLike():i._addLike()},(r="_likeCard")in this?Object.defineProperty(this,r,{value:o,enumerable:!0,configurable:!0,writable:!0}):this[r]=o,this._name=a.name,this._link=a.link,this._data=a,this._handleCardClick=u,this._handleDelClick=c,this._cardSelector=n,this._ownerId=l,this._addLike=s,this._removeLike=f}var n,r;return n=t,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._cardPhoto=this._element.querySelector(".card__card-image"),this._cardPhoto.src=this._link,this._cardPhoto.alt=this._name,this._cardTitle=this._element.querySelector(".card__card-title"),this._cardTitle.textContent=this._name,this._cardRemoveBtn=this._element.querySelector(".card__remove-btn"),this._cardLikeBtn=this._element.querySelector(".card__like-btn"),this._likesCounter=this._element.querySelector(".card__likes-counter"),this._likesCounter.textContent=this._data.likes.length||"0",this._checkOwner(),this._setEventListeners(),this._element}},{key:"updateLikes",value:function(e){this._cardLikeBtn.classList.toggle("card__like-btn_active"),this._likesCounter.textContent=e.likes.length}},{key:"removeCard",value:function(){this._element.remove()}},{key:"_checkOwner",value:function(){var e=this;this._data.owner._id!=this._ownerId&&(this._cardRemoveBtn.style.display="none"),this._data.likes.forEach((function(t){t._id===e._ownerId&&e._cardLikeBtn.classList.toggle("card__like-btn_active")}))}},{key:"_setEventListeners",value:function(){var e=this;this._cardRemoveBtn.addEventListener("click",(function(t){return e._handleDelClick(t)})),this._cardLikeBtn.addEventListener("click",this._likeCard),this._cardPhoto.addEventListener("click",(function(){return e._handleCardClick(e._data)}))}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t){var n=t.renderer,r=t.containerSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=n,this._container=document.querySelector(r)}var t,r;return t=e,(r=[{key:"renderItems",value:function(e){var t=this;e.forEach((function(e){t._renderer(e)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&n(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var a=function(){function e(t,n){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),i(this,"_showInputError",(function(e){r._errorElement=r._formElement.querySelector("#".concat(e.id,"-error")),e.classList.add(r._inputErrorClass),r._errorElement.textContent=e.validationMessage,r._errorElement.classList.add(r._errorClass)})),i(this,"_hideInputError",(function(e){r._errorElement=r._formElement.querySelector("#".concat(e.id,"-error")),e.classList.remove(r._inputErrorClass),r._errorElement.classList.remove(r._errorClass),r._errorElement.textContent=""})),i(this,"_checkInputValidity",(function(e){e.validity.valid?r._hideInputError(e):r._showInputError(e)})),i(this,"_hasInvalidInput",(function(){return r._inputList.some((function(e){return!e.validity.valid}))})),i(this,"_setEventListeners",(function(){r._buttonElement=r._formElement.querySelector(r._submitButtonSelector),r._inputList.forEach((function(e){e.addEventListener("input",(function(){r._checkInputValidity(e),r._toggleButtonState()}))}))})),this._formElement=n,this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector))}var t,n;return t=e,(n=[{key:"resetValidation",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){e._hideInputError(t)}))}},{key:"disableButtonState",value:function(){this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0}},{key:"_enableButtonState",value:function(){this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?this.disableButtonState():this._enableButtonState()}},{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}}])&&o(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var c=function(){function e(t){var n=t.userName,r=t.userInfo,o=t.userAvatar;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._userName=document.querySelector(n),this._userInfo=document.querySelector(r),this._userAvatar=document.querySelector(o)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._userName.textContent,about:this._userInfo.textContent}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.about,r=e.avatar;this._userName.textContent=t,this._userInfo.textContent=n,this.setAvatar(r)}},{key:"setAvatar",value:function(e){this._userAvatar.style.backgroundImage="url(".concat(e,")")}}])&&u(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var s=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this),this._handleCloseBtnAndOverlay=this._handleCloseBtnAndOverlay.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("modal_active"),this._setEventListeners()}},{key:"close",value:function(){this._popup.classList.remove("modal_active"),this._removeEventListeners()}},{key:"_handleEscClose",value:function(e){"Escape"==e.key&&this.close()}},{key:"_handleCloseBtnAndOverlay",value:function(e){(e.target.classList.contains("modal__overlay")||e.target.classList.contains("modal__close-btn"))&&this.close()}},{key:"_setEventListeners",value:function(){this._popup.addEventListener("mousedown",this._handleCloseBtnAndOverlay),document.addEventListener("keyup",this._handleEscClose)}},{key:"_removeEventListeners",value:function(){this._popup.removeEventListener("mousedown",this._handleCloseBtnAndOverlay),document.removeEventListener("keyup",this._handleEscClose)}}])&&l(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function f(e){return f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},f(e)}function d(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function h(){return h="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=p(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},h.apply(this,arguments)}function p(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=m(e)););return e}function _(e,t){return _=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},_(e,t)}function y(e,t){if(t&&("object"===f(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function m(e){return m=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},m(e)}var v=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&_(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=m(r);if(o){var n=m(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return y(this,e)});function a(e){var t,n=e.popupSelector;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,n))._modalImagePicture=t._popup.querySelector(".modal__image"),t._modalImageCaption=t._popup.querySelector(".modal__caption"),t}return t=a,(n=[{key:"open",value:function(e){h(m(a.prototype),"open",this).call(this),this._modalImagePicture.src=e.link,this._modalImagePicture.alt=e.name,this._modalImageCaption.textContent=e.name}}])&&d(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(s),b=document.querySelector(".profile__edit-btn"),g=document.querySelector(".profile__add-btn"),k=document.querySelector(".modal__info_type_user-name"),E=document.querySelector(".modal__info_type_user-job"),w=document.querySelector(".profile__avatar"),S={formSelector:".modal__form",inputSelector:".modal__info",submitButtonSelector:".modal__submit-btn",inactiveButtonClass:"modal__submit-btn_inactive",inputErrorClass:"modal__info_type_error",errorClass:"modal__input-error"};function C(e){return C="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},C(e)}function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function L(){return L="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=P(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},L.apply(this,arguments)}function P(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=B(e)););return e}function j(e,t){return j=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},j(e,t)}function I(e,t){if(t&&("object"===C(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return R(e)}function R(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function B(e){return B=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},B(e)}var q=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&j(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=B(r);if(o){var n=B(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return I(this,e)});function a(e){var t,n,r,o,u=e.popupSelector,c=e.handleFormSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),o=function(e){e.preventDefault()},(r="_handleFormSubmit")in(n=R(t=i.call(this,u)))?Object.defineProperty(n,r,{value:o,enumerable:!0,configurable:!0,writable:!0}):n[r]=o,t._handleFormSubmit=c,t._formElement=t._popup.querySelector(S.formSelector),t._submitBtn=t._formElement.querySelector(S.submitButtonSelector),t._inputList=t._formElement.querySelectorAll(S.inputSelector),t}return t=a,(n=[{key:"getInputValues",value:function(){var e=this;return this._formValues={},this._inputList.forEach((function(t){return e._formValues[t.name]=t.value})),this._formValues}},{key:"_setEventListeners",value:function(){L(B(a.prototype),"_setEventListeners",this).call(this),this._formElement.addEventListener("submit",this._handleFormSubmit)}},{key:"_removeEventListeners",value:function(){L(B(a.prototype),"_removeEventListeners",this).call(this),this._formElement.removeEventListener("submit",this._handleFormSubmit)}},{key:"notifyLoadProgress",value:function(e,t){this._submitBtn.textContent=e?"Сохранение...":t}},{key:"close",value:function(){L(B(a.prototype),"close",this).call(this),this._formElement.reset()}}])&&O(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(s);function A(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var T=function(){function e(t){var n=t.baseUrl,r=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=n,this._headers=r}var t,n;return t=e,(n=[{key:"_getResponse",value:function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}},{key:"getUserInfo",value:function(){var e=this;return fetch(this._baseUrl+"/users/me",{headers:this._headers}).then((function(t){return e._getResponse(t)}))}},{key:"setUserInfo",value:function(e){var t=this,n=e.name,r=e.about;return fetch(this._baseUrl+"/users/me",{method:"PATCH",headers:this._headers,body:JSON.stringify({name:n,about:r})}).then((function(e){return t._getResponse(e)}))}},{key:"getInitialCards",value:function(){var e=this;return fetch(this._baseUrl+"/cards",{headers:this._headers}).then((function(t){return e._getResponse(t)}))}},{key:"addCard",value:function(e){var t=this,n=e.name,r=e.link;return fetch(this._baseUrl+"/cards",{method:"POST",headers:this._headers,body:JSON.stringify({name:n,link:r})}).then((function(e){return t._getResponse(e)}))}},{key:"delCard",value:function(e){var t=this,n=e.cardId;return fetch(this._baseUrl+"/cards/".concat(n),{method:"DELETE",headers:this._headers}).then((function(e){return t._getResponse(e)}))}},{key:"removeLike",value:function(e){var t=this,n=e.cardId;return fetch(this._baseUrl+"/cards"+"/".concat(n,"/likes"),{method:"DELETE",headers:this._headers}).then((function(e){return t._getResponse(e)}))}},{key:"addLike",value:function(e){var t=this,n=e.cardId;return fetch(this._baseUrl+"/cards"+"/".concat(n,"/likes"),{method:"PUT",headers:this._headers}).then((function(e){return t._getResponse(e)}))}},{key:"addAvatar",value:function(e){var t=this,n=e.inputValueData;return fetch(this._baseUrl+"/users/me/avatar",{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:n.avatar})}).then((function(e){return t._getResponse(e)}))}}])&&A(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function U(e){return U="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},U(e)}function D(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function x(){return x="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=V(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},x.apply(this,arguments)}function V(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=J(e)););return e}function N(e,t){return N=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},N(e,t)}function F(e,t){if(t&&("object"===U(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return H(e)}function H(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function J(e){return J=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},J(e)}var M=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&N(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=J(r);if(o){var n=J(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return F(this,e)});function a(e){var t,n,r,o;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),o=function(e){t._deleteCard(e)},(r="_handleDeleteCard")in(n=H(t=i.call(this,e)))?Object.defineProperty(n,r,{value:o,enumerable:!0,configurable:!0,writable:!0}):n[r]=o,t._formElement=t._popup.querySelector(S.formSelector),t}return t=a,(n=[{key:"setSubmitHandler",value:function(e){this._deleteCard=e,this._formElement.addEventListener("submit",this._handleDeleteCard)}},{key:"_removeEventListeners",value:function(){x(J(a.prototype),"_removeEventListeners",this).call(this),this._formElement.removeEventListener("submit",this._handleDeleteCard)}}])&&D(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(s);function z(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var $=null,G=new T({baseUrl:"https://mesto.nomoreparties.co/v1/cohort36",headers:{authorization:"cb9ff590-46ff-4deb-baa7-866967fcdc7e","Content-Type":"application/json"}});Promise.all([G.getUserInfo(),G.getInitialCards()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,u=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){u=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(u)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return z(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?z(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];$=o._id,K.setUserInfo({name:o.name,about:o.about,avatar:o.avatar}),te.renderItems(i)})).catch((function(e){console.log(e)}));var K=new c({userName:".profile__user-name",userInfo:".profile__description",userAvatar:".profile__avatar"}),Q=new q({popupSelector:".modal_type_edit",handleFormSubmit:function(){Q.notifyLoadProgress(!0,"Сохранить");var e=Q.getInputValues();G.setUserInfo({name:e.name,about:e.about}).then((function(e){K.setUserInfo({name:e.name,about:e.about,avatar:e.avatar}),Q.close()})).catch((function(e){console.log(e)})).finally((function(){Q.notifyLoadProgress(!1,"Сохранить")}))}}),W=new q({popupSelector:".modal_type_edit-avatar",handleFormSubmit:function(){W.notifyLoadProgress(!0,"Сохранить");var e=W.getInputValues();G.addAvatar({inputValueData:e}).then((function(e){K.setAvatar(e.avatar),W.close()})).catch((function(e){console.log(e)})).finally((function(){W.notifyLoadProgress(!1,"Сохранить")}))}}),X=new q({popupSelector:".modal_type_add",handleFormSubmit:function(){X.notifyLoadProgress(!0,"Создать");var e=X.getInputValues();G.addCard({name:e.name,link:e.link}).then((function(e){var t=Z(e);te.addItem(t),X.close()})).catch((function(e){console.log(e)})).finally((function(){X.notifyLoadProgress(!1,"Создать")}))}}),Y=new M(".modal_type_confirmation");function Z(e){var n=new t({data:e,handleCardClick:function(){ee.open(e)},handleDelClick:function(){Y.setSubmitHandler((function(t){t.preventDefault(),G.delCard({cardId:e._id}).then((function(){n.removeCard(),Y.close()})).catch((function(e){console.log(e)}))})),Y.open()},ownerId:$,addLike:function(){G.addLike({cardId:e._id}).then((function(e){n.updateLikes(e)})).catch((function(e){console.log(e)}))},removeLike:function(){G.removeLike({cardId:e._id}).then((function(e){n.updateLikes(e)})).catch((function(e){console.log(e)}))}},".elements__template");return n.generateCard()}var ee=new v({popupSelector:".modal_type_image"}),te=new r({renderer:function(e){var t=Z(e);te.addItem(t)},containerSelector:".elements__cards"}),ne={};!function(e){Array.from(document.querySelectorAll(e.formSelector)).forEach((function(t){var n=new a(e,t),r=t.getAttribute("name");ne[r]=n,n.enableValidation()}))}(S),b.addEventListener("click",(function(){Q.open();var e=K.getUserInfo();k.value=e.name,E.value=e.about,ne["modal__form_type_edit-form"].resetValidation()})),g.addEventListener("click",(function(){X.open(),ne["modal__form_type_add-form"].resetValidation()})),w.addEventListener("click",(function(){W.open(),ne["modal__form_type_edit-avatar-form"].resetValidation()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,